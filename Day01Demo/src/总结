01.能够说出Object类的特点
    Object类是一切类的父类，
    它的所有方法，一切类都可以使用。

02. 能够重写Object类的toString方法
    默认是输出对象地址，
    从写是为了输出对象数据
    可以自动生成！

03. 能够重写Object类的equals方法
    默认是比较两个对象的地址
    重写的目的是为了自己制定比较规则
    也可以自动生成！

04. 能够使用日期类输出当前日期
    Date d = new Date();
    System.out.println(d);

05. 能够使用将日期格式化为字符串的方法  format
    SimpleDateFormat sdf =
    new SimpleDateFormat("yyyy年MM月dd日 HH:mm:ss EEE");

    String rs = sdf.format(Date d);
    String rs = sdf.format(long time);

07. 能够使用将字符串转换成日期的方法  parse
    String timeStr = "2018-09-09 10:48:21";
    // (2)把字符串时间解析成一个Date日期对象。
    // 注意点：简单日期格式化对象的参数格式必须与被解析时间的格式完全一致，否则解析出错。
    SimpleDateFormat sdf =
            new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

    // 通过简单日期格式化对象把字符串时间解析成Date日期对象
    Date d = sdf.parse(timeStr);

08. 能够使用System类的数组复制方法 arraycopy
        // 数组复制（掌握）
        int[] arrs = new int[]{60,70,80,90,100};
        int[] arrs1 = new int[8]; // [0 , 0 , 70 , 80 , 90 , 0 , 0 , 0]
        /*
        * 参数一：被复制的数组
        * 参数二：从哪个位置开始复制（索引位置）
        * 参数三：复制到哪个数组
        * 参数四：从目标数组的哪个位置开始粘贴
        * 参数无： 要复制的元素个数
        * */
        System.arraycopy(arrs,1,arrs1,2,3);
        System.out.println(Arrays.toString(arrs1));

09. 能够使用System类获取当前毫秒时刻值 currentTimeInMillis
        // 得到系统时间毫秒值
        long time = System.currentTimeMillis();

10. 能够说出使用StringBuilder类可以解决的问题
    字符串运算，字符串拼接。性能好！

11 能够使用StringBuilder进行字符串拼接操作 append
   append().append()

12. 能够说出8种基本类型对应的包装类名称
     int Integer
     char  Character
13. 能够说出自动装箱、自动拆箱的概念
    自动装箱:把基本数据类型的数据自动包装成包装类。
    自动拆箱：把包装类的数据自动拆成基本数据类型。

14. 能够将字符串转换为对应的基本类型
      Xxx.parseXxx(String str)
      Xxx.valueOf("字符串数值")

15. 能够将基本类型转换为对应的字符串
      Integer it = 12;
     // (1)把数值数据变成字符串
      String rs = it.toString();
      System.out.println(rs);

      // (2)直接给字符加一个空字符串即可（最简单的形式）
      String rs1 = it + "" ;
      System.out.println(rs1);

      // (3) 通过Integer的toString方法转字符串
      String rs2 = Integer.toString(it);
      System.out.println(rs2);